{"mappings":"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","sources":["src/index.ts","node_modules/@parcel/runtime-js/lib/bundles/runtime-94f8c0d2500cab39.js"],"sourcesContent":["//@ts-expect-error\nimport cssText from \"bundle-text:./default.css\"\nimport { Alignment, Coords, Placement, Side } from \"./types\"\n\nexport class Dropdown extends HTMLElement {\n  shadow: ShadowRoot\n  buttonSlot: HTMLSlotElement\n  button: HTMLElement\n  menuSlot: HTMLSlotElement\n  menu: HTMLElement\n  container: HTMLDivElement\n\n  /**\n   * Position of the dropdown menu relative to the button\n   */\n  position: Placement\n  /**\n   * the height of menu element\n   */\n  menuHeight: number\n\n  constructor() {\n    super()\n\n    const template = document.createElement(\"template\")\n    template.innerHTML = `\n        <style>\n            :host {\n                display: block;\n                position: relative;\n            }         \n\n            #container {\n                position: absolute;\n                zindex: 10;\n                overflow: hidden;\n                white-space: nowrap;\n            }\n        </style>\n\n        <slot name=\"button\" id=\"button\">Dropdown button</slot>\n        <div id=\"container\">\n            <slot name=\"menu\" id=\"menu\">\n                Dropdown content\n            </slot>\n        </div>\n        `\n\n    // shadow DOM\n    this.shadow = this.attachShadow({ mode: \"open\" })\n    this.shadow.appendChild(template.content.cloneNode(true))\n\n    // default style\n    if (this.getAttribute(\"defaultStyle\") === \"true\") {\n      const templateStyle = document.createElement(\"style\")\n      templateStyle.innerText = `\n        #container {\n          background-color: #fff;\n          padding: 0.25rem;\n          border-radius: 0.5rem;\n          font-size: 0.8rem;\n          box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n        }\n      `\n      this.shadow.appendChild(templateStyle)\n\n      const style = document.createElement(\"style\")\n      style.innerText = cssText\n      // outside the shadow Dom so it can be applied to slots elements\n      this.appendChild(style)\n    }\n\n    // elements\n    this.buttonSlot = this.shadow.getElementById(\"button\") as HTMLSlotElement\n    this.menuSlot = this.shadow.getElementById(\"menu\") as HTMLSlotElement\n\n    this.button = this.buttonSlot.assignedElements()[0] as HTMLElement\n    this.container = this.shadow.getElementById(\"container\") as HTMLDivElement\n    this.menu = this.menuSlot.assignedElements()[0] as HTMLElement\n\n    // properties\n    this.position = (this.getAttribute(\"position\") as Placement) ?? \"top\"\n\n    // keep menu height in memory\n    this.menuHeight = this.container.offsetHeight\n    // set dropdown coords from position given\n    this.setCoordsFromPosition(this.position)\n    // after this, we can hide the menu container\n    this.container.hidden = true\n\n    // events\n    this.buttonSlot.addEventListener(\n      \"click\",\n      this.onButtonClick.bind(this),\n      false\n    )\n    this.handleClickOut = this.handleClickOut.bind(this)\n  }\n\n  getCoordsFromPosition(position: Placement) {\n    const ref = this.button.getBoundingClientRect()\n    const dd = this.container.getBoundingClientRect()\n\n    const side = position.split(\"-\")[0] as Side\n    const alignment = position.split(\"-\")[1] as Alignment\n    const mainAxis = [\"top\", \"bottom\"].includes(side) ? \"x\" : \"y\"\n    const length = mainAxis === \"x\" ? \"width\" : \"height\"\n    const commonX = ref.width / 2 - dd.width / 2\n    const commonY = ref.height / 2 - dd.height / 2\n    const commonAlign = ref[length] / 2 - dd[length] / 2\n\n    let coords: Coords\n\n    switch (side) {\n      case \"top\":\n        coords = { x: commonX, y: -dd.height }\n        break\n      case \"bottom\":\n        coords = { x: commonX, y: ref.height }\n        break\n      case \"right\":\n        coords = { x: ref.width, y: commonY }\n        break\n      case \"left\":\n        coords = { x: -dd.width, y: commonY }\n        break\n      default:\n        coords = { x: commonX, y: commonY }\n    }\n\n    switch (alignment) {\n      case \"start\":\n        coords[mainAxis] -= commonAlign\n        break\n      case \"end\":\n        coords[mainAxis] += commonAlign\n        break\n    }\n\n    return coords\n  }\n\n  setCoordsFromPosition(position: Placement) {\n    const { x, y } = this.getCoordsFromPosition(position)\n\n    Object.assign(this.container.style, { left: `${x}px`, top: `${y}px` })\n  }\n\n  onButtonClick(): void {\n    this.container.hidden = false\n    this.container\n      .animate([{ maxHeight: \"0px\" }, { maxHeight: `${this.menuHeight}px` }], {\n        duration: 100,\n        fill: \"forwards\",\n      })\n      .finished.then(() => {\n        document.addEventListener(\"click\", this.handleClickOut, false)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  handleClickOut(event: MouseEvent): void {\n    const target = event.target as HTMLElement\n\n    if (target != null && target !== this.menu && !this.menu.contains(target)) {\n      this.container\n        .animate(\n          [{ maxHeight: `${this.menuHeight}px` }, { maxHeight: \"0px\" }],\n          {\n            duration: 100,\n            fill: \"forwards\",\n          }\n        )\n        .finished.then(() => {\n          this.container.hidden = true\n          document.removeEventListener(\"click\", this.handleClickOut, false)\n        })\n        .catch((error) => console.error(error))\n    }\n  }\n}\n\ncustomElements.define(\"kwc-dropdown\", Dropdown)\n\nexport function createDropdown(): Dropdown {\n  return document.createElement(\"kwc-dropdown\") as Dropdown\n}\n","module.exports = \"9e9aa2737cde596e\";"],"names":["$b4e14b6b8da86996$export$931cbfb6bfb85fc","HTMLElement","constructor","super","template","document","createElement","innerHTML","this","shadow","attachShadow","mode","appendChild","content","cloneNode","getAttribute","templateStyle","innerText","style","$parcel$interopDefault","buttonSlot","getElementById","menuSlot","button","assignedElements","container","menu","position","menuHeight","offsetHeight","setCoordsFromPosition","hidden","addEventListener","onButtonClick","bind","handleClickOut","getCoordsFromPosition","ref","getBoundingClientRect","dd","side","split","alignment","mainAxis","includes","length","commonX","width","commonY","height","commonAlign","coords","x","y","Object","assign","left","top","animate","maxHeight","duration","fill","finished","then","catch","error","console","event","target","contains","removeEventListener","customElements","define"],"version":3,"file":"index.dd2af25b.js.map"}